{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\"; // import userReducer from \"./userRedux\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n// const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n// export let persistor = persistStore(store);\n\nexport default configureStore({\n  reducer: {\n    cart: cartReducer\n  }\n});","map":{"version":3,"sources":["/Users/garvitanagpal/bakeryFinal/client/src/redux/store.js"],"names":["configureStore","cartReducer","reducer","cart"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,eAAeD,cAAc,CAAC;AAC5BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAEF;AADC;AADmB,CAAD,CAA7B","sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\n// import userReducer from \"./userRedux\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// const persistConfig = {\n//   key: \"root\",\n//   version: 1,\n//   storage,\n// };\n\n// const rootReducer = combineReducers({ user: userReducer, cart: cartReducer });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// });\n\n// export let persistor = persistStore(store);\n\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}